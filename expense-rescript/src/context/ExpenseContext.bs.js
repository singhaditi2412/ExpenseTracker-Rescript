// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";

var initialState = [];

function getSavedTransactions(param) {
  var value = sessionStorage.getItem("getSavedTransactions");
  if (value !== null) {
    return JSON.parse(value);
  } else {
    return [];
  }
}

var context = React.createContext({
      transactions: getSavedTransactions(undefined),
      addTransaction: (function (param) {
          
        })
    });

var make = context.Provider;

function ExpenseContext$Provider(Props) {
  var value = Props.value;
  var children = Props.children;
  return React.createElement(make, {
              value: value,
              children: children
            });
}

var Provider = {
  make: ExpenseContext$Provider
};

function reducer(state, action) {
  var t = action._0;
  var getStringifiedTransactions = function (param) {
    var v = JSON.stringify(state.concat([t]));
    if (v !== undefined) {
      return v;
    } else {
      return "";
    }
  };
  sessionStorage.setItem("getSavedTransactions", getStringifiedTransactions(undefined));
  return state.concat([t]);
}

function ExpenseContext(Props) {
  var children = Props.children;
  var match = React.useReducer(reducer, initialState);
  var dispatch = match[1];
  return React.createElement(React.Fragment, undefined, React.createElement(ExpenseContext$Provider, {
                  value: {
                    transactions: match[0],
                    addTransaction: (function (transaction) {
                        Curry._1(dispatch, /* AddTransaction */{
                              _0: transaction
                            });
                      })
                  },
                  children: children
                }));
}

var make$1 = ExpenseContext;

export {
  initialState ,
  context ,
  Provider ,
  reducer ,
  make$1 as make,
}
/* context Not a pure module */
